{"id":"node_modules/colormap/index.js","dependencies":[{"name":"/project/codeArt_curves/package.json","includedInParent":true,"mtime":1673881294816},{"name":"/project/codeArt_curves/node_modules/colormap/package.json","includedInParent":true,"mtime":1673878873444},{"name":"./colorScale","loc":{"line":8,"column":25,"index":99},"parent":"/project/codeArt_curves/node_modules/colormap/index.js","resolved":"/project/codeArt_curves/node_modules/colormap/colorScale.js"},{"name":"lerp","loc":{"line":9,"column":19,"index":135},"parent":"/project/codeArt_curves/node_modules/colormap/index.js","resolved":"/project/codeArt_curves/node_modules/lerp/index.js"}],"generated":{"js":"/*\n * Ben Postlethwaite\n * January 2013\n * License MIT\n */\n'use strict';\n\nvar colorScale = require('./colorScale');\nvar lerp = require('lerp')\n\nmodule.exports = createColormap;\n\nfunction createColormap (spec) {\n    /*\n     * Default Options\n     */\n    var indicies, fromrgba, torgba,\n        nsteps, cmap, colormap, format,\n        nshades, colors, alpha, i;\n\n    if ( !spec ) spec = {};\n\n    nshades = (spec.nshades || 72) - 1;\n    format = spec.format || 'hex';\n\n    colormap = spec.colormap;\n    if (!colormap) colormap = 'jet';\n\n    if (typeof colormap === 'string') {\n        colormap = colormap.toLowerCase();\n\n        if (!colorScale[colormap]) {\n            throw Error(colormap + ' not a supported colorscale');\n        }\n\n        cmap = colorScale[colormap];\n\n    } else if (Array.isArray(colormap)) {\n        cmap = colormap.slice();\n\n    } else {\n        throw Error('unsupported colormap option', colormap);\n    }\n\n    if (cmap.length > nshades + 1) {\n        throw new Error(\n            colormap+' map requires nshades to be at least size '+cmap.length\n        );\n    }\n\n    if (!Array.isArray(spec.alpha)) {\n\n        if (typeof spec.alpha === 'number') {\n            alpha = [spec.alpha, spec.alpha];\n\n        } else {\n            alpha = [1, 1];\n        }\n\n    } else if (spec.alpha.length !== 2) {\n        alpha = [1, 1];\n\n    } else {\n        alpha = spec.alpha.slice();\n    }\n\n    // map index points from 0..1 to 0..n-1\n    indicies = cmap.map(function(c) {\n        return Math.round(c.index * nshades);\n    });\n\n    // Add alpha channel to the map\n    alpha[0] = Math.min(Math.max(alpha[0], 0), 1);\n    alpha[1] = Math.min(Math.max(alpha[1], 0), 1);\n\n    var steps = cmap.map(function(c, i) {\n        var index = cmap[i].index\n\n        var rgba = cmap[i].rgb.slice();\n\n        // if user supplies their own map use it\n        if (rgba.length === 4 && rgba[3] >= 0 && rgba[3] <= 1) {\n            return rgba\n        }\n        rgba[3] = alpha[0] + (alpha[1] - alpha[0])*index;\n\n        return rgba\n    })\n\n\n    /*\n     * map increasing linear values between indicies to\n     * linear steps in colorvalues\n     */\n    var colors = []\n    for (i = 0; i < indicies.length-1; ++i) {\n        nsteps = indicies[i+1] - indicies[i];\n        fromrgba = steps[i];\n        torgba = steps[i+1];\n\n        for (var j = 0; j < nsteps; j++) {\n            var amt = j / nsteps\n            colors.push([\n                Math.round(lerp(fromrgba[0], torgba[0], amt)),\n                Math.round(lerp(fromrgba[1], torgba[1], amt)),\n                Math.round(lerp(fromrgba[2], torgba[2], amt)),\n                lerp(fromrgba[3], torgba[3], amt)\n            ])\n        }\n    }\n\n    //add 1 step as last value\n    colors.push(cmap[cmap.length - 1].rgb.concat(alpha[1]))\n\n    if (format === 'hex') colors = colors.map( rgb2hex );\n    else if (format === 'rgbaString') colors = colors.map( rgbaStr );\n    else if (format === 'float') colors = colors.map( rgb2float );\n\n    return colors;\n};\n\nfunction rgb2float (rgba) {\n    return [\n        rgba[0] / 255,\n        rgba[1] / 255,\n        rgba[2] / 255,\n        rgba[3]\n    ]\n}\n\nfunction rgb2hex (rgba) {\n    var dig, hex = '#';\n    for (var i = 0; i < 3; ++i) {\n        dig = rgba[i];\n        dig = dig.toString(16);\n        hex += ('00' + dig).substr( dig.length );\n    }\n    return hex;\n}\n\nfunction rgbaStr (rgba) {\n    return 'rgba(' + rgba.join(',') + ')';\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/colormap/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/colormap/index.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}}],"sources":{"node_modules/colormap/index.js":"/*\n * Ben Postlethwaite\n * January 2013\n * License MIT\n */\n'use strict';\n\nvar colorScale = require('./colorScale');\nvar lerp = require('lerp')\n\nmodule.exports = createColormap;\n\nfunction createColormap (spec) {\n    /*\n     * Default Options\n     */\n    var indicies, fromrgba, torgba,\n        nsteps, cmap, colormap, format,\n        nshades, colors, alpha, i;\n\n    if ( !spec ) spec = {};\n\n    nshades = (spec.nshades || 72) - 1;\n    format = spec.format || 'hex';\n\n    colormap = spec.colormap;\n    if (!colormap) colormap = 'jet';\n\n    if (typeof colormap === 'string') {\n        colormap = colormap.toLowerCase();\n\n        if (!colorScale[colormap]) {\n            throw Error(colormap + ' not a supported colorscale');\n        }\n\n        cmap = colorScale[colormap];\n\n    } else if (Array.isArray(colormap)) {\n        cmap = colormap.slice();\n\n    } else {\n        throw Error('unsupported colormap option', colormap);\n    }\n\n    if (cmap.length > nshades + 1) {\n        throw new Error(\n            colormap+' map requires nshades to be at least size '+cmap.length\n        );\n    }\n\n    if (!Array.isArray(spec.alpha)) {\n\n        if (typeof spec.alpha === 'number') {\n            alpha = [spec.alpha, spec.alpha];\n\n        } else {\n            alpha = [1, 1];\n        }\n\n    } else if (spec.alpha.length !== 2) {\n        alpha = [1, 1];\n\n    } else {\n        alpha = spec.alpha.slice();\n    }\n\n    // map index points from 0..1 to 0..n-1\n    indicies = cmap.map(function(c) {\n        return Math.round(c.index * nshades);\n    });\n\n    // Add alpha channel to the map\n    alpha[0] = Math.min(Math.max(alpha[0], 0), 1);\n    alpha[1] = Math.min(Math.max(alpha[1], 0), 1);\n\n    var steps = cmap.map(function(c, i) {\n        var index = cmap[i].index\n\n        var rgba = cmap[i].rgb.slice();\n\n        // if user supplies their own map use it\n        if (rgba.length === 4 && rgba[3] >= 0 && rgba[3] <= 1) {\n            return rgba\n        }\n        rgba[3] = alpha[0] + (alpha[1] - alpha[0])*index;\n\n        return rgba\n    })\n\n\n    /*\n     * map increasing linear values between indicies to\n     * linear steps in colorvalues\n     */\n    var colors = []\n    for (i = 0; i < indicies.length-1; ++i) {\n        nsteps = indicies[i+1] - indicies[i];\n        fromrgba = steps[i];\n        torgba = steps[i+1];\n\n        for (var j = 0; j < nsteps; j++) {\n            var amt = j / nsteps\n            colors.push([\n                Math.round(lerp(fromrgba[0], torgba[0], amt)),\n                Math.round(lerp(fromrgba[1], torgba[1], amt)),\n                Math.round(lerp(fromrgba[2], torgba[2], amt)),\n                lerp(fromrgba[3], torgba[3], amt)\n            ])\n        }\n    }\n\n    //add 1 step as last value\n    colors.push(cmap[cmap.length - 1].rgb.concat(alpha[1]))\n\n    if (format === 'hex') colors = colors.map( rgb2hex );\n    else if (format === 'rgbaString') colors = colors.map( rgbaStr );\n    else if (format === 'float') colors = colors.map( rgb2float );\n\n    return colors;\n};\n\nfunction rgb2float (rgba) {\n    return [\n        rgba[0] / 255,\n        rgba[1] / 255,\n        rgba[2] / 255,\n        rgba[3]\n    ]\n}\n\nfunction rgb2hex (rgba) {\n    var dig, hex = '#';\n    for (var i = 0; i < 3; ++i) {\n        dig = rgba[i];\n        dig = dig.toString(16);\n        hex += ('00' + dig).substr( dig.length );\n    }\n    return hex;\n}\n\nfunction rgbaStr (rgba) {\n    return 'rgba(' + rgba.join(',') + ')';\n}\n"},"lineCount":144}},"error":null,"hash":"19fe54d8a77b4cad21703129368bf286","cacheData":{"env":{}}}